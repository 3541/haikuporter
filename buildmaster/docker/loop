#!/bin/sh

WORKDIR="haikuports"

if [ ! -d "$WORKDIR" ]
then
	echo "buildmaster instance $WORKDIR not found, need to bootstrap?"
	exit 1
fi

cd "$WORKDIR"

. buildmaster/config

if [ -z "$HAIKUPORTER" ]
then
	echo "buildmaster instance configuration invalid"
	exit 1
fi

SUCCESS_WAIT=60
ERROR_WAIT=60
COMMANDS_DIR="$(realpath "$(dirname "$HAIKUPORTER")/buildmaster/bin")"
BUILDMASTER="$COMMANDS_DIR/buildmaster"

export PYTHONUNBUFFERED=1

exec 2>&1

build_prep () {
	CONSISTENCY_REPORT_FILE="$REPO_DIR/repo_consistency.txt"
	echo "repo consistency report at $(git rev-parse HEAD)" \
		> "$CONSISTENCY_REPORT_FILE"
	$HAIKUPORTER --debug --check-repository-consistency \
		--no-package-obsoletion \
		--system-packages-directory buildmaster/initial-packages \
		>> "$CONSISTENCY_REPORT_FILE"

	$HAIKUPORTER --debug --prune-package-repository
}

while true
do
	echo "$(date) updating tree and pruning packages of removed ports"
	HEAD_REVISION=$(git rev-parse HEAD)
	git pull --ff-only

	if [ -f buildmaster/do-everything ]; then
		echo "$(date) buildmaster everything requested, starting"
		echo ""
		
		rm buildmaster/do-everything

		build_prep
		$BUILDMASTER everything
	elif [ -f buildmaster/do-packages ]; then
		LIST=$(cat buildmaster/do-packages | tr '\n' ' ')
		echo "$(date) buildmaster list requested, starting the following:"
		echo "  $LIST"
		echo ""
		rm buildmaster/do-packages

		build_prep
		$BUILDMASTER build $LIST
	elif [ $(git rev-parse HEAD) = $HEAD_REVISION ]; then
		echo "$(date) no new revision"
		sleep $SUCCESS_WAIT
		continue
	else
		echo "$(date) starting buildmaster update"
		echo ""
		
		build_prep
		$BUILDMASTER update
	fi
	RESULT=$?

	echo ""
	if [ $RESULT -ne 0 -a $RESULT -ne 3 ]
	then
		echo "$(date) buildmaster update failed, waiting $ERROR_WAIT"
		sleep $ERROR_WAIT
		continue
	fi

	# Careful here
	SIGFLAGS=""
	if [ -f /run/secrets/sig_repo_privatekey && -f /run/secrets/sig_repo_privatekeypass ]; then
		echo "Info: Found package repository signature information."
		touch /tmp/haiku-secret.key && chown 600 /tmp/haiku-secret.key
		echo "untrusted comment: minisign encrypted secret key" > /tmp/haiku-secret.key
		cat /run/secrets/sig_repo_privatekey >> /tmp/haiku-secret.key
		SIGFLAGS="--sign-package-repository-privkey-file /tmp/haiku-secret.key"
		SIGFLAGS="$SIGFLAGS --sign-package-repository-privkey-pass"
		SIGFLAGS="$SIGFLAGS $(cat /run/secrets/sig_repo_privatekeypass)"
	else
		echo "Info: Package repository signature information was not found."
	fi

	echo ""
	echo "$(date) pruning packages and creating repository"
	$HAIKUPORTER --debug --prune-package-repository \
		--system-packages-directory buildmaster/initial-packages \
		--check-package-repository-consistency \
		--create-package-repository "$REPO_DIR" \
		$SIGFLAGS \
		> "$REPO_DIR/report.txt" 2>&1

	echo ""
	if [ $? -ne 0 ]
	then
		echo "$(date) create repo failed, waiting $ERROR_WAIT"
		sleep $ERROR_WAIT
		rm -f /tmp/haiku-secret.key;
		continue
	fi
	rm -f /tmp/haiku-secret.key;

	if [ ! -z "$REPOSITORY_TRIGGER_URL" ]
	then
		echo "$(date) requesting $REPOSITORY_TRIGGER_URL"
		curl "$REPOSITORY_TRIGGER_URL"
		echo
	fi

	echo "$(date) repo created, waiting $SUCCESS_WAIT"
	sleep $SUCCESS_WAIT
done
