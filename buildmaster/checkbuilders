#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# Copyright 2016-2017 Haiku, Inc. All rights reserved.
# Distributed under the terms of the MIT License.
#
# Authors:
#   Alexander von Gluck IV <kallisti5@unixzen.com>
#

import os
import sys
import json
import argparse
import paramiko

class color:
	HEADER = '\033[95m'
	OKBLUE = '\033[94m'
	OKGREEN = '\033[92m'
	WARNING = '\033[93m'
	FAIL = '\033[91m'
	ENDC = '\033[0m'
	BOLD = '\033[1m'
	UNDERLINE = '\033[4m'

my_location = os.path.dirname(os.path.realpath(__file__))

parser = argparse.ArgumentParser(description='List and test connections to builders')
parser.add_argument('-C', '--confdir', help='Builder config directory on local machine', required=False, default=my_location + "/builders")
args = parser.parse_args()

print color.HEADER + "Name                + Host                + Status" + color.ENDC
for filename in os.listdir(args.confdir):
	fullpath = os.path.join(args.confdir, filename)
	basename = os.path.basename(fullpath)
	extension = basename.split(".")
	if extension[-1] != 'json':
		continue
	with open(fullpath) as data_file:
		data = json.load(data_file)
	sys.stdout.write(extension[0].ljust(20))
	sys.stdout.write("| ")
	sys.stdout.write(data["ssh"]["host"].ljust(20))
	sys.stdout.write("| ")

	ssh = paramiko.SSHClient()
	try:
		ssh.load_system_host_keys(os.path.join(args.confdir, data["ssh"]["hostKeyFile"]))
	except:
		print color.FAIL + "FAIL: Invalid host key" + color.ENDC
		continue

	try:
		ssh.connect(data["ssh"]["host"],
			port=int(data["ssh"]["port"]),
			username=data["ssh"]["user"],
			key_filename=os.path.join(args.confdir, data["ssh"]["privateKeyFile"]))
	except:
		print color.FAIL + "FAIL: Error connecting to host!" + color.ENDC
		continue

	print "SSH session login successful"
	stdin, stdout, stderr = ssh.exec_command("uname -a")
	print color.OKGREEN + "Connected: " + stdout.readlines() + color.ENDC
	ssh.close()
